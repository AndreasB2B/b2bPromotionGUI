@page
@model KN.B2B.Web.Pages.Private.Requests.DeleteModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this Request?</h3>
<div>
    <hr />
    <partial name="_Details" model="Model.B2BRequest" />
    <div class="card border-dark mb-3">
        <div class="card-header">
            Products
        </div>
        <div class="card-body text-dark scroll-max-threeHundred">
            @if (Model.Products.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th> B2B Category </th>
                            <th> Supplier </th>
                            <th> SKU </th>
                            <th> Price </th>
                            <th> Vol. </th>
                            <th> Total </th>
                            <th> Order Date</th>
                            <th> Ship. Date</th>
                            <th> Delivery Date</th>
                            <th> Track & Trace</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.Products.OrderBy(x => x.OrderDate))
                        {
                            <tr>
                                <td>
                                    @(product.B2BCategory == null ? "" : product.B2BCategory.Category)
                                </td>
                                <td>
                                    @(product.Supplier == null ? "" : product.Supplier.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => product.SKU)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => product.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => product.Volume)
                                </td>
                                <td>
                                    @(product.Price * product.Volume)
                                </td>
                                <td>
                                    @product.OrderDate.Date.ToShortDateString()
                                </td>
                                <td>
                                    @(product.ShippingDate == null ? "" : product.ShippingDate.Value.Date.ToShortDateString())
                                </td>
                                <td>
                                    @(product.DeliveryDate == null ? "" : product.DeliveryDate.Value.Date.ToShortDateString())
                                </td>
                                <td>
                                    @Html.DisplayFor(item => product.TrackingCode)
                                </td>
                                <td style="text-align:right">
                                    <button disabled type="button" class="btn btn-lg">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <label class="control-label">No products for this request.</label>
            }
        </div>
    </div>
    <div class="card border-dark mb-3">
        <div class="card-header">
            Communications
        </div>
        <div class="card-body text-dark scroll-max-threeHundred">
            @if (Model.Communications.Count() > 0)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th> Date </th>
                            <th> Note </th>
                            <th> With whom? </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var communication in Model.Communications.OrderBy(x => x.Date))
                        {
                            <tr>
                                <td>
                                    @communication.Date.ToShortDateString()
                                </td>
                                <td>
                                    @Html.DisplayFor(item => communication.Note)
                                </td>
                                <td>
                                    @Html.DisplayFor(item => communication.Recipient)
                                </td>
                                <td style="text-align:right">
                                    <button disabled type="button" class="btn btn-lg">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <label class="control-label">No communications about this request.</label>
            }
        </div>
    </div>
    <form method="post">
        <input type="hidden" asp-for="B2BRequest.Id" />
        <button class="btn btn-danger" type="submit">
            <i class="fas fa-trash-alt"></i>
            Delete
        </button>
        |
        <a class="btn btn-info" type="reset" asp-page="./Edit" asp-route-id="@Model.B2BRequest.Id">
            <i class="fas fa-edit"></i>
            Edit
        </a>
        |
        <a class="btn btn-secondary" asp-page="./Index">
            <i class="fa fa-list"></i>
            Back
        </a>
    </form>
</div>

@section Scripts {
    <script type="text/javascript">
        function toggleCancellationReason() {
            var selectedReason = document.getElementById("endStatus");
            var status = '@ConstValues.CancelledEndStatusId';
            var cancellationReason = document.getElementById("cancellationReason");
            if (selectedReason.value === status) {
                cancellationReason.style.display = "block";
            }
            else {
                cancellationReason.style.display = "none";
            }
        }

        function toggleSample() {
            var selectedReason = document.getElementById("startStatus");
            var status = '@ConstValues.SampleStatusId';
            var cancellationReason = document.getElementById("sample");
            if (selectedReason.value === status) {
                cancellationReason.style.display = "block";
            }
            else {
                cancellationReason.style.display = "none";
            }
        }

        function windowToggle() {
            toggleSample();
            toggleCancellationReason();
        }

        window.onload = windowToggle(); //trigger on load to show the field if appropriate value
    </script>
}
