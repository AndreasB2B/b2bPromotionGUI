// <auto-generated />
using System;
using KN.B2B.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KN.B2B.Web.Migrations
{
    [DbContext(typeof(B2BDbContext))]
    [Migration("20220330135700_removed")]
    partial class removed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KN.B2B.Model.B2BPriceClass", b =>
                {
                    b.Property<int>("priceClass_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("priceClass_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceClass_price01")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price02")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price03")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price04")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price05")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price06")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_price07")
                        .HasColumnType("int");

                    b.Property<int>("priceClass_quantity")
                        .HasColumnType("int");

                    b.HasKey("priceClass_id");

                    b.ToTable("B2BPriceClasses");
                });

            modelBuilder.Entity("KN.B2B.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Att")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("B2BResponsibleId")
                        .HasColumnType("int");

                    b.Property<string>("CVR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<string>("InvoicingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoicingZipId")
                        .HasColumnType("int");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("Newsletter")
                        .HasColumnType("bit");

                    b.Property<int?>("ResellerId")
                        .HasColumnType("int");

                    b.Property<bool>("Showroom")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("B2BResponsibleId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("InvoicingZipId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ResellerId");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("KN.B2B.Model.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("B2bInvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B2bOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CancellationReasonId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeliveryZipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("ExpressDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("ExpressProduction")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LegalAction")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDeadline")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SampleApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SampleRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SampleSent")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("TrustPilot")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TrustPilotDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CancellationReasonId");

                    b.HasIndex("CurrentStatusId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryZipId");

                    b.HasIndex("EndStatusId");

                    b.HasIndex("StartStatusId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("KN.B2B.Model.RequestCommunication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestCommunications");
                });

            modelBuilder.Entity("KN.B2B.Model.RequestProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("B2BCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("B2BCategoryId");

                    b.HasIndex("ComplaintId");

                    b.HasIndex("RequestId");

                    b.HasIndex("SupplierId");

                    b.ToTable("RequestProducts");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryDK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryGroupId");

                    b.ToTable("B2BCategories");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BCategoryGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryGroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("B2BCategoryGroups");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BPrintPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_techniqueIdtechnique_id")
                        .HasColumnType("int");

                    b.Property<bool>("print_express")
                        .HasColumnType("bit");

                    b.Property<float>("print_height")
                        .HasColumnType("real");

                    b.Property<string>("print_position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("print_supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("print_width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("fk_techniqueIdtechnique_id");

                    b.ToTable("B2BPrintPositions");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BPrintType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("B2BPrintTypes");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BResponsible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("B2BResponsibles");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.CancellationReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CancellationReasons");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colours");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.CurrentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentStatuses");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.CustomerChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerChannels");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.DUNSGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.EndStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EndStatuses");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.Reseller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resellers");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.StartStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StartStatuses");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("KN.B2B.Model.ZipCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amts")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Municipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MunicipalityNumber")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZipCodes");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BParrentProducts", b =>
                {
                    b.Property<int>("parrentProduct_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_B2BCategoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("fk_B2BCategoryGroupsId")
                        .HasColumnType("int");

                    b.Property<string>("parrentProduct_dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("parrentProduct_height")
                        .HasColumnType("real");

                    b.Property<float>("parrentProduct_length")
                        .HasColumnType("real");

                    b.Property<string>("parrentProduct_longDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parrentProduct_mainCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parrentProduct_masterId")
                        .HasColumnType("int");

                    b.Property<string>("parrentProduct_material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parrentProduct_parrentSku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parrentProduct_printPositions")
                        .HasColumnType("int");

                    b.Property<bool>("parrentProduct_printable")
                        .HasColumnType("bit");

                    b.Property<string>("parrentProduct_productName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parrentProduct_shortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parrentProduct_subCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("parrentProduct_width")
                        .HasColumnType("real");

                    b.HasKey("parrentProduct_id");

                    b.HasIndex("fk_B2BCategoriesId");

                    b.HasIndex("fk_B2BCategoryGroupsId");

                    b.ToTable("B2BParrentProducts");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.B2BPrintTechnique", b =>
                {
                    b.Property<int>("technique_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_supplierHandleCodehandles_id")
                        .HasColumnType("int");

                    b.Property<string>("fk_supplierPriceCodeprintPrice_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("technique_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("technique_maxColors")
                        .HasColumnType("int");

                    b.Property<string>("technique_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("technique_supplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("technique_id");

                    b.HasIndex("fk_supplierHandleCodehandles_id");

                    b.HasIndex("fk_supplierPriceCodeprintPrice_id");

                    b.ToTable("B2BPrintTechniques");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierHandles", b =>
                {
                    b.Property<int>("handles_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("handles_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("handles_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("handles_price")
                        .HasColumnType("real");

                    b.HasKey("handles_id");

                    b.ToTable("SupplierHandles");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintCost", b =>
                {
                    b.Property<int>("printCost_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_printPriceScalesscale_id")
                        .HasColumnType("int");

                    b.Property<int>("printCost_areaFrom")
                        .HasColumnType("int");

                    b.Property<int>("printCost_areaTo")
                        .HasColumnType("int");

                    b.Property<int>("printCost_rangeId")
                        .HasColumnType("int");

                    b.HasKey("printCost_id");

                    b.HasIndex("fk_printPriceScalesscale_id");

                    b.ToTable("SupplierPrintCosts");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintPrice", b =>
                {
                    b.Property<string>("printPrice_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("fk_printCostprintCost_id")
                        .HasColumnType("int");

                    b.Property<string>("printPrice_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("printPrice_nextColourIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("printPrice_pricingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("printPrice_repeat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("printPrice_setup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("printPrice_id");

                    b.HasIndex("fk_printCostprintCost_id");

                    b.ToTable("SupplierPrintPrices");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintPriceScales", b =>
                {
                    b.Property<int>("scale_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("scale_minimumQuantity")
                        .HasColumnType("int");

                    b.Property<int>("scale_nextPrice")
                        .HasColumnType("int");

                    b.Property<float>("scale_price")
                        .HasColumnType("real");

                    b.HasKey("scale_id");

                    b.ToTable("SupplierPrintPriceScales");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BProduct", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_ParentSKUparrentProduct_id")
                        .HasColumnType("int");

                    b.Property<int?>("fk_printPositionId")
                        .HasColumnType("int");

                    b.Property<string>("product_BatteryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_CommercialItemHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_CommercialItemLength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_CommercialItemWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_CommercialItemWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_CountryOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("product_DeliveryTimeMT_IL1_T1")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_Flavours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_IntraCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_NumberOfBatteries")
                        .HasColumnType("int");

                    b.Property<int>("product_OrderUnit")
                        .HasColumnType("int");

                    b.Property<string>("product_PriceClass_IL1_CN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_CN2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_CN3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_CN4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_CN5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_CN6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_PriceClass_IL1_T6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_ProductImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Q_OnPallet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_SearchTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Sizes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_WritingColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_brandNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_longDescriptionDK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_longDescriptionEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_longDescriptionFI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_shortDescriptionDK")
                        .HasColumnType("nvarchar(31)")
                        .HasMaxLength(31);

                    b.Property<string>("product_shortDescriptionEN")
                        .HasColumnType("nvarchar(31)")
                        .HasMaxLength(31);

                    b.Property<string>("product_shortDescriptionFI")
                        .HasColumnType("nvarchar(31)")
                        .HasMaxLength(31);

                    b.Property<string>("product_sku")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_id");

                    b.HasIndex("fk_ParentSKUparrentProduct_id");

                    b.HasIndex("fk_printPositionId");

                    b.ToTable("B2BProdducts");
                });

            modelBuilder.Entity("KN.B2B.Model.products.productPrice.B2BPriceScale", b =>
                {
                    b.Property<int>("scale_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("scale_minimumQuantity")
                        .HasColumnType("int");

                    b.Property<float>("scale_price")
                        .HasColumnType("real");

                    b.HasKey("scale_id");

                    b.ToTable("B2BPriceScales");
                });

            modelBuilder.Entity("KN.B2B.Model.products.productPrice.B2BProductPrice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_productSkuproduct_id")
                        .HasColumnType("int");

                    b.Property<string>("price_startingPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("price_validUntill")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fk_productSkuproduct_id");

                    b.ToTable("B2BProductPrices");
                });

            modelBuilder.Entity("KN.B2B.Model.Customer", b =>
                {
                    b.HasOne("KN.B2B.Model.SystemTables.B2BResponsible", "B2BResponsible")
                        .WithMany()
                        .HasForeignKey("B2BResponsibleId");

                    b.HasOne("KN.B2B.Model.SystemTables.CustomerChannel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId");

                    b.HasOne("KN.B2B.Model.SystemTables.DUNSGroup", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("KN.B2B.Model.ZipCode", "InvoicingZip")
                        .WithMany()
                        .HasForeignKey("InvoicingZipId");

                    b.HasOne("KN.B2B.Model.SystemTables.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.HasOne("KN.B2B.Model.SystemTables.Reseller", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId");

                    b.HasOne("KN.B2B.Model.ZipCode", "ZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");
                });

            modelBuilder.Entity("KN.B2B.Model.Request", b =>
                {
                    b.HasOne("KN.B2B.Model.SystemTables.CancellationReason", "CancellationReason")
                        .WithMany()
                        .HasForeignKey("CancellationReasonId");

                    b.HasOne("KN.B2B.Model.SystemTables.CurrentStatus", "CurrentStatus")
                        .WithMany()
                        .HasForeignKey("CurrentStatusId");

                    b.HasOne("KN.B2B.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("KN.B2B.Model.ZipCode", "DeliveryZip")
                        .WithMany()
                        .HasForeignKey("DeliveryZipId");

                    b.HasOne("KN.B2B.Model.SystemTables.EndStatus", "EndStatus")
                        .WithMany()
                        .HasForeignKey("EndStatusId");

                    b.HasOne("KN.B2B.Model.SystemTables.StartStatus", "StartStatus")
                        .WithMany()
                        .HasForeignKey("StartStatusId");
                });

            modelBuilder.Entity("KN.B2B.Model.RequestCommunication", b =>
                {
                    b.HasOne("KN.B2B.Model.Request", "Request")
                        .WithMany("Communications")
                        .HasForeignKey("RequestId");
                });

            modelBuilder.Entity("KN.B2B.Model.RequestProduct", b =>
                {
                    b.HasOne("KN.B2B.Model.SystemTables.B2BCategory", "B2BCategory")
                        .WithMany()
                        .HasForeignKey("B2BCategoryId");

                    b.HasOne("KN.B2B.Model.SystemTables.Complaint", "Complaint")
                        .WithMany()
                        .HasForeignKey("ComplaintId");

                    b.HasOne("KN.B2B.Model.Request", "Request")
                        .WithMany("Products")
                        .HasForeignKey("RequestId");

                    b.HasOne("KN.B2B.Model.SystemTables.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BCategory", b =>
                {
                    b.HasOne("KN.B2B.Model.SystemTables.B2BCategoryGroup", "CategoryGroup")
                        .WithMany()
                        .HasForeignKey("CategoryGroupId");
                });

            modelBuilder.Entity("KN.B2B.Model.SystemTables.B2BPrintPosition", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BPrintPositions.B2BPrintTechnique", "fk_techniqueId")
                        .WithMany()
                        .HasForeignKey("fk_techniqueIdtechnique_id");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BParrentProducts", b =>
                {
                    b.HasOne("KN.B2B.Model.SystemTables.B2BCategory", "fk_B2BCategories")
                        .WithMany()
                        .HasForeignKey("fk_B2BCategoriesId");

                    b.HasOne("KN.B2B.Model.SystemTables.B2BCategoryGroup", "fk_B2BCategoryGroups")
                        .WithMany()
                        .HasForeignKey("fk_B2BCategoryGroupsId");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.B2BPrintTechnique", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BPrintPositions.SupplierHandles", "fk_supplierHandleCode")
                        .WithMany()
                        .HasForeignKey("fk_supplierHandleCodehandles_id");

                    b.HasOne("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintPrice", "fk_supplierPriceCode")
                        .WithMany()
                        .HasForeignKey("fk_supplierPriceCodeprintPrice_id");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintCost", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintPriceScales", "fk_printPriceScales")
                        .WithMany()
                        .HasForeignKey("fk_printPriceScalesscale_id");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintPrice", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BPrintPositions.SupplierPrintCost", "fk_printCost")
                        .WithMany()
                        .HasForeignKey("fk_printCostprintCost_id");
                });

            modelBuilder.Entity("KN.B2B.Model.products.B2BProduct", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BParrentProducts", "fk_ParentSKU")
                        .WithMany()
                        .HasForeignKey("fk_ParentSKUparrentProduct_id");

                    b.HasOne("KN.B2B.Model.SystemTables.B2BPrintPosition", "fk_printPosition")
                        .WithMany()
                        .HasForeignKey("fk_printPositionId");
                });

            modelBuilder.Entity("KN.B2B.Model.products.productPrice.B2BProductPrice", b =>
                {
                    b.HasOne("KN.B2B.Model.products.B2BProduct", "fk_productSku")
                        .WithMany()
                        .HasForeignKey("fk_productSkuproduct_id");
                });
#pragma warning restore 612, 618
        }
    }
}
